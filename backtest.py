import pandas as pd

def run_backtest(df):
    #Back Test
    trades = []
    position = None

    for i in range(len(df)):
        if df.loc[i, 'Buy_Signal'] and position is None:
            position = {
                'buy_date': df.loc[i, 'Date'],
                'buy_price': df.loc[i, 'Close']
            }

        elif df.loc[i, 'Sell_Signal'] and position is not None:
            position['sell_date'] = df.loc[i, 'Date']
            position['sell_price'] = df.loc[i, 'Close']
            position['return_pct'] = (position['sell_price'] - position['buy_price']) / position['buy_price']

            trades.append(position)
            position = None
    
    trade_df = pd.DataFrame(trades)
    return trade_df

def summarize_performance(trade_df, initial_cash=10000):
    if not trade_df.empty:
        total_trades = len(trade_df)
        win_rate = (trade_df['return_pct'] > 0).mean()
        avg_return = trade_df['return_pct'].mean()
        max_gain = trade_df['return_pct'].max()
        max_loss = trade_df['return_pct'].min()
        total_return = (trade_df['return_pct'] + 1).prod() - 1

        print("Strategy Performance Summary")
        print(f"Total Trades:{total_trades}")
        print(f"Win Rate: {win_rate:.2%}")
        print(f"Average Return per Trade: {avg_return:.2%}")
        print(f"Max Gain: {max_gain:.2%}")
        print(f"Max Loss: {max_loss:.2%}")
        print(f"Total Strategy Return: {total_return:.2%}")

    else:
        print("No trades generated by this strategy!")
    
    return trade_df